"""
Keeps project secrets in a json file.

- Uses `secrets.json` from root

If secrets.json is not present:
- Uses encrypted secret file generated by `encrypt.py`
- Set `DJANGO_CONFIG_SECRETS_FILE` in environment to override default secret file `.secrets_dump`
- Set `DJANGO_CONFIG_PRIVATE_KEY` and `DJANGO_CONFIG_PUBLIC_KEY` given by/to `encrypt.py`

For example secrets.json see secrets.example.json
"""


__all__ = ['SECRET']

import json
import os

from Crypto.Cipher import AES


BASE_DIR = os.path.dirname(
    os.path.dirname(
        os.path.abspath(__file__)
    )
)
PATH = os.path.join(BASE_DIR, 'secrets.json')


try:
    with open(PATH, 'r') as file:
        SECRET = json.loads(file.read())

except FileNotFoundError:
    PRIVATE_KEY = os.environ['DJANGO_CONFIG_PRIVATE_KEY']
    PUBLIC_KEY = os.environ['DJANGO_CONFIG_PUBLIC_KEY']
    ENCRYPTED_FILE_PATH = os.getenv('DJANGO_CONFIG_SECRETS_FILE', '.secrets_dump')

    with open(ENCRYPTED_FILE_PATH, 'rb') as file:
        ENCRYPTED_TEXT = file.read()

    AES_TEXT = AES.new(PRIVATE_KEY, AES.MODE_CFB, PUBLIC_KEY)
    DECRYPTED_TEXT = AES_TEXT.decrypt(ENCRYPTED_TEXT)
    SECRET = json.loads(DECRYPTED_TEXT)
